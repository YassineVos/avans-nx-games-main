name: Build and deploy frontend, backend & rcmnd-api to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and zip apps from /dist
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install deps and build
        working-directory: ./avans-nx-workshop2-main
        run: |
          npm install
          npm run build

      - name: Zip frontend
        run: zip -r my-app-release.zip ./avans-nx-workshop2-main/dist/apps/my-app

      - name: Zip backend
        run: zip -r data-api-release.zip ./avans-nx-workshop2-main/dist/apps/data-api

      - name: Zip rcmnd-api
        run: zip -r rcmnd-api-release.zip ./avans-nx-workshop2-main/dist/apps/rcmnd-api

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-app
          path: my-app-release.zip

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-api
          path: data-api-release.zip

      - name: Upload rcmnd-api artifact
        uses: actions/upload-artifact@v4
        with:
          name: rcmnd-api
          path: rcmnd-api-release.zip

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: my-app

      - name: Unzip frontend
        run: unzip my-app-release.zip

      - name: Deploy frontend to Azure Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.ANGULAR_PUBLISHTOKEN }}
          action: upload
          app_location: '/' 
          output_location: 'dist/apps/my-app'

  deploy-backend:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: data-api

      - name: Unzip backend
        run: unzip data-api-release.zip

      - name: Deploy backend to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'nx-games'
          slot-name: 'Production'
          publish-profile: ${{ secrets.NESTJS_PUBLISHPROFILE }}
          package: .

  deploy-rcmnd-api:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download rcmnd-api artifact
        uses: actions/download-artifact@v4
        with:
          name: rcmnd-api

      - name: Unzip rcmnd-api
        run: unzip rcmnd-api-release.zip

      - name: Deploy rcmnd-api to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'nx-games-neo4j'
          slot-name: 'Production'
          publish-profile: ${{ secrets.NEO4J_PUBLISHPROFILE }}
          package: .
